Archive member included to satisfy reference by file (symbol)

/usr/lib/gcc/avr/5.4.0/avr5/libgcc.a(_exit.o)
                              /usr/lib/gcc/avr/5.4.0/../../../avr/lib/avr5/crtatmega32.o (exit)
/usr/lib/gcc/avr/5.4.0/avr5/libgcc.a(_copy_data.o)
                              main.o (__do_copy_data)
/usr/lib/gcc/avr/5.4.0/../../../avr/lib/avr5/libc.a(fputs.o)
                              main.o (fputs)
/usr/lib/gcc/avr/5.4.0/avr5/libgcc.a(_epilogue.o)
                              /usr/lib/gcc/avr/5.4.0/../../../avr/lib/avr5/libc.a(fputs.o) (__epilogue_restores__)

Memory Configuration

Name             Origin             Length             Attributes
text             0x0000000000000000 0x0000000000020000 xr
data             0x0000000000800060 0x000000000000ffa0 rw !x
eeprom           0x0000000000810000 0x0000000000010000 rw !x
fuse             0x0000000000820000 0x0000000000000002 rw !x
lock             0x0000000000830000 0x0000000000000400 rw !x
signature        0x0000000000840000 0x0000000000000400 rw !x
user_signatures  0x0000000000850000 0x0000000000000400 rw !x
*default*        0x0000000000000000 0xffffffffffffffff

Linker script and memory map

LOAD /usr/lib/gcc/avr/5.4.0/../../../avr/lib/avr5/crtatmega32.o
LOAD main.o
LOAD lcd.o
LOAD /usr/lib/gcc/avr/5.4.0/../../../avr/lib/avr5/libm.a
START GROUP
LOAD /usr/lib/gcc/avr/5.4.0/avr5/libgcc.a
LOAD /usr/lib/gcc/avr/5.4.0/../../../avr/lib/avr5/libm.a
LOAD /usr/lib/gcc/avr/5.4.0/../../../avr/lib/avr5/libc.a
LOAD /usr/lib/gcc/avr/5.4.0/../../../avr/lib/avr5/libatmega32.a
END GROUP
                0x0000000000000000                __TEXT_REGION_ORIGIN__ = DEFINED (__TEXT_REGION_ORIGIN__)?__TEXT_REGION_ORIGIN__:0x0
                0x0000000000800060                __DATA_REGION_ORIGIN__ = DEFINED (__DATA_REGION_ORIGIN__)?__DATA_REGION_ORIGIN__:0x800060
                0x0000000000020000                __TEXT_REGION_LENGTH__ = DEFINED (__TEXT_REGION_LENGTH__)?__TEXT_REGION_LENGTH__:0x20000
                0x000000000000ffa0                __DATA_REGION_LENGTH__ = DEFINED (__DATA_REGION_LENGTH__)?__DATA_REGION_LENGTH__:0xffa0
                0x0000000000010000                __EEPROM_REGION_LENGTH__ = DEFINED (__EEPROM_REGION_LENGTH__)?__EEPROM_REGION_LENGTH__:0x10000
                [0x0000000000000002]                __FUSE_REGION_LENGTH__ = DEFINED (__FUSE_REGION_LENGTH__)?__FUSE_REGION_LENGTH__:0x400
                0x0000000000000400                __LOCK_REGION_LENGTH__ = DEFINED (__LOCK_REGION_LENGTH__)?__LOCK_REGION_LENGTH__:0x400
                0x0000000000000400                __SIGNATURE_REGION_LENGTH__ = DEFINED (__SIGNATURE_REGION_LENGTH__)?__SIGNATURE_REGION_LENGTH__:0x400
                0x0000000000000400                __USER_SIGNATURE_REGION_LENGTH__ = DEFINED (__USER_SIGNATURE_REGION_LENGTH__)?__USER_SIGNATURE_REGION_LENGTH__:0x400

.hash
 *(.hash)

.dynsym
 *(.dynsym)

.dynstr
 *(.dynstr)

.gnu.version
 *(.gnu.version)

.gnu.version_d
 *(.gnu.version_d)

.gnu.version_r
 *(.gnu.version_r)

.rel.init
 *(.rel.init)

.rela.init
 *(.rela.init)

.rel.text
 *(.rel.text)
 *(.rel.text.*)
 *(.rel.gnu.linkonce.t*)

.rela.text
 *(.rela.text)
 *(.rela.text.*)
 *(.rela.gnu.linkonce.t*)

.rel.fini
 *(.rel.fini)

.rela.fini
 *(.rela.fini)

.rel.rodata
 *(.rel.rodata)
 *(.rel.rodata.*)
 *(.rel.gnu.linkonce.r*)

.rela.rodata
 *(.rela.rodata)
 *(.rela.rodata.*)
 *(.rela.gnu.linkonce.r*)

.rel.data
 *(.rel.data)
 *(.rel.data.*)
 *(.rel.gnu.linkonce.d*)

.rela.data
 *(.rela.data)
 *(.rela.data.*)
 *(.rela.gnu.linkonce.d*)

.rel.ctors
 *(.rel.ctors)

.rela.ctors
 *(.rela.ctors)

.rel.dtors
 *(.rel.dtors)

.rela.dtors
 *(.rela.dtors)

.rel.got
 *(.rel.got)

.rela.got
 *(.rela.got)

.rel.bss
 *(.rel.bss)

.rela.bss
 *(.rela.bss)

.rel.plt
 *(.rel.plt)

.rela.plt
 *(.rela.plt)

.text           0x0000000000000000      0x37e
 *(.vectors)
 .vectors       0x0000000000000000       0x54 /usr/lib/gcc/avr/5.4.0/../../../avr/lib/avr5/crtatmega32.o
                0x0000000000000000                __vectors
                0x0000000000000000                __vector_default
 *(.vectors)
 *(.progmem.gcc*)
                0x0000000000000054                . = ALIGN (0x2)
                0x0000000000000054                __trampolines_start = .
 *(.trampolines)
 .trampolines   0x0000000000000054        0x0 linker stubs
 *(.trampolines*)
                0x0000000000000054                __trampolines_end = .
 *libprintf_flt.a:*(.progmem.data)
 *libc.a:*(.progmem.data)
 *(.progmem*)
 .progmem.data  0x0000000000000054        0xc main.o
                0x0000000000000054                tekst
                0x0000000000000060                . = ALIGN (0x2)
 *(.jumptables)
 *(.jumptables*)
 *(.lowtext)
 *(.lowtext*)
                0x0000000000000060                __ctors_start = .
 *(.ctors)
                0x0000000000000060                __ctors_end = .
                0x0000000000000060                __dtors_start = .
 *(.dtors)
                0x0000000000000060                __dtors_end = .
 SORT(*)(.ctors)
 SORT(*)(.dtors)
 *(.init0)
 .init0         0x0000000000000060        0x0 /usr/lib/gcc/avr/5.4.0/../../../avr/lib/avr5/crtatmega32.o
                0x0000000000000060                __init
 *(.init0)
 *(.init1)
 *(.init1)
 *(.init2)
 .init2         0x0000000000000060        0xc /usr/lib/gcc/avr/5.4.0/../../../avr/lib/avr5/crtatmega32.o
 *(.init2)
 *(.init3)
 *(.init3)
 *(.init4)
 .init4         0x000000000000006c       0x16 /usr/lib/gcc/avr/5.4.0/avr5/libgcc.a(_copy_data.o)
                0x000000000000006c                __do_copy_data
 *(.init4)
 *(.init5)
 *(.init5)
 *(.init6)
 *(.init6)
 *(.init7)
 *(.init7)
 *(.init8)
 *(.init8)
 *(.init9)
 .init9         0x0000000000000082        0x8 /usr/lib/gcc/avr/5.4.0/../../../avr/lib/avr5/crtatmega32.o
 *(.init9)
 *(.text)
 .text          0x000000000000008a        0x4 /usr/lib/gcc/avr/5.4.0/../../../avr/lib/avr5/crtatmega32.o
                0x000000000000008a                __vector_1
                0x000000000000008a                __vector_12
                0x000000000000008a                __bad_interrupt
                0x000000000000008a                __vector_6
                0x000000000000008a                __vector_3
                0x000000000000008a                __vector_11
                0x000000000000008a                __vector_13
                0x000000000000008a                __vector_17
                0x000000000000008a                __vector_19
                0x000000000000008a                __vector_7
                0x000000000000008a                __vector_5
                0x000000000000008a                __vector_4
                0x000000000000008a                __vector_9
                0x000000000000008a                __vector_2
                0x000000000000008a                __vector_15
                0x000000000000008a                __vector_8
                0x000000000000008a                __vector_14
                0x000000000000008a                __vector_10
                0x000000000000008a                __vector_16
                0x000000000000008a                __vector_18
                0x000000000000008a                __vector_20
 .text          0x000000000000008e        0x0 main.o
 .text          0x000000000000008e      0x14c lcd.o
                0x000000000000008e                lcd_write_instr
                0x00000000000000e8                lcd_write_data
                0x0000000000000142                lcdinit
                0x0000000000000182                lcd_clear
                0x0000000000000188                lcd_set_xy
                0x0000000000000196                lcd_write_text_xy
                0x00000000000001bc                lcd_puts
                0x00000000000001c6                blinking
 .text          0x00000000000001da        0x0 /usr/lib/gcc/avr/5.4.0/avr5/libgcc.a(_exit.o)
 .text          0x00000000000001da        0x0 /usr/lib/gcc/avr/5.4.0/avr5/libgcc.a(_copy_data.o)
 .text          0x00000000000001da        0x0 /usr/lib/gcc/avr/5.4.0/../../../avr/lib/avr5/libc.a(fputs.o)
 .text          0x00000000000001da        0x0 /usr/lib/gcc/avr/5.4.0/avr5/libgcc.a(_epilogue.o)
                0x00000000000001da                . = ALIGN (0x2)
 *(.text.*)
 .text.startup  0x00000000000001da      0x116 main.o
                0x00000000000001da                main
 .text.libgcc.mul
                0x00000000000002f0        0x0 /usr/lib/gcc/avr/5.4.0/avr5/libgcc.a(_exit.o)
 .text.libgcc.div
                0x00000000000002f0        0x0 /usr/lib/gcc/avr/5.4.0/avr5/libgcc.a(_exit.o)
 .text.libgcc   0x00000000000002f0        0x0 /usr/lib/gcc/avr/5.4.0/avr5/libgcc.a(_exit.o)
 .text.libgcc.prologue
                0x00000000000002f0        0x0 /usr/lib/gcc/avr/5.4.0/avr5/libgcc.a(_exit.o)
 .text.libgcc.builtins
                0x00000000000002f0        0x0 /usr/lib/gcc/avr/5.4.0/avr5/libgcc.a(_exit.o)
 .text.libgcc.fmul
                0x00000000000002f0        0x0 /usr/lib/gcc/avr/5.4.0/avr5/libgcc.a(_exit.o)
 .text.libgcc.fixed
                0x00000000000002f0        0x0 /usr/lib/gcc/avr/5.4.0/avr5/libgcc.a(_exit.o)
 .text.libgcc.mul
                0x00000000000002f0        0x0 /usr/lib/gcc/avr/5.4.0/avr5/libgcc.a(_copy_data.o)
 .text.libgcc.div
                0x00000000000002f0        0x0 /usr/lib/gcc/avr/5.4.0/avr5/libgcc.a(_copy_data.o)
 .text.libgcc   0x00000000000002f0        0x0 /usr/lib/gcc/avr/5.4.0/avr5/libgcc.a(_copy_data.o)
 .text.libgcc.prologue
                0x00000000000002f0        0x0 /usr/lib/gcc/avr/5.4.0/avr5/libgcc.a(_copy_data.o)
 .text.libgcc.builtins
                0x00000000000002f0        0x0 /usr/lib/gcc/avr/5.4.0/avr5/libgcc.a(_copy_data.o)
 .text.libgcc.fmul
                0x00000000000002f0        0x0 /usr/lib/gcc/avr/5.4.0/avr5/libgcc.a(_copy_data.o)
 .text.libgcc.fixed
                0x00000000000002f0        0x0 /usr/lib/gcc/avr/5.4.0/avr5/libgcc.a(_copy_data.o)
 .text.avr-libc
                0x00000000000002f0       0x54 /usr/lib/gcc/avr/5.4.0/../../../avr/lib/avr5/libc.a(fputs.o)
                0x00000000000002f0                fputs
 .text.libgcc.mul
                0x0000000000000344        0x0 /usr/lib/gcc/avr/5.4.0/avr5/libgcc.a(_epilogue.o)
 .text.libgcc.div
                0x0000000000000344        0x0 /usr/lib/gcc/avr/5.4.0/avr5/libgcc.a(_epilogue.o)
 .text.libgcc   0x0000000000000344        0x0 /usr/lib/gcc/avr/5.4.0/avr5/libgcc.a(_epilogue.o)
 .text.libgcc.prologue
                0x0000000000000344       0x36 /usr/lib/gcc/avr/5.4.0/avr5/libgcc.a(_epilogue.o)
                0x0000000000000344                __epilogue_restores__
 .text.libgcc.builtins
                0x000000000000037a        0x0 /usr/lib/gcc/avr/5.4.0/avr5/libgcc.a(_epilogue.o)
 .text.libgcc.fmul
                0x000000000000037a        0x0 /usr/lib/gcc/avr/5.4.0/avr5/libgcc.a(_epilogue.o)
 .text.libgcc.fixed
                0x000000000000037a        0x0 /usr/lib/gcc/avr/5.4.0/avr5/libgcc.a(_epilogue.o)
                0x000000000000037a                . = ALIGN (0x2)
 *(.fini9)
 .fini9         0x000000000000037a        0x0 /usr/lib/gcc/avr/5.4.0/avr5/libgcc.a(_exit.o)
                0x000000000000037a                exit
                0x000000000000037a                _exit
 *(.fini9)
 *(.fini8)
 *(.fini8)
 *(.fini7)
 *(.fini7)
 *(.fini6)
 *(.fini6)
 *(.fini5)
 *(.fini5)
 *(.fini4)
 *(.fini4)
 *(.fini3)
 *(.fini3)
 *(.fini2)
 *(.fini2)
 *(.fini1)
 *(.fini1)
 *(.fini0)
 .fini0         0x000000000000037a        0x4 /usr/lib/gcc/avr/5.4.0/avr5/libgcc.a(_exit.o)
 *(.fini0)
                0x000000000000037e                _etext = .

.data           0x0000000000800060       0x32 load address 0x000000000000037e
                0x0000000000800060                PROVIDE (__data_start, .)
 *(.data)
 .data          0x0000000000800060        0x0 /usr/lib/gcc/avr/5.4.0/../../../avr/lib/avr5/crtatmega32.o
 .data          0x0000000000800060        0xe main.o
                0x0000000000800060                lcd_stream
 .data          0x000000000080006e        0x0 lcd.o
 .data          0x000000000080006e        0x0 /usr/lib/gcc/avr/5.4.0/avr5/libgcc.a(_exit.o)
 .data          0x000000000080006e        0x0 /usr/lib/gcc/avr/5.4.0/avr5/libgcc.a(_copy_data.o)
 .data          0x000000000080006e        0x0 /usr/lib/gcc/avr/5.4.0/../../../avr/lib/avr5/libc.a(fputs.o)
 .data          0x000000000080006e        0x0 /usr/lib/gcc/avr/5.4.0/avr5/libgcc.a(_epilogue.o)
 *(.data*)
 *(.gnu.linkonce.d*)
 *(.rodata)
 *(.rodata*)
 .rodata.str1.1
                0x000000000080006e       0x23 main.o
 *(.gnu.linkonce.r*)
                0x0000000000800092                . = ALIGN (0x2)
 *fill*         0x0000000000800091        0x1 
                0x0000000000800092                _edata = .
                0x0000000000800092                PROVIDE (__data_end, .)

.bss            0x0000000000800092        0x0
                [!provide]                        PROVIDE (__bss_start, .)
 *(.bss)
 .bss           0x0000000000800092        0x0 /usr/lib/gcc/avr/5.4.0/../../../avr/lib/avr5/crtatmega32.o
 .bss           0x0000000000800092        0x0 main.o
 .bss           0x0000000000800092        0x0 lcd.o
 .bss           0x0000000000800092        0x0 /usr/lib/gcc/avr/5.4.0/avr5/libgcc.a(_exit.o)
 .bss           0x0000000000800092        0x0 /usr/lib/gcc/avr/5.4.0/avr5/libgcc.a(_copy_data.o)
 .bss           0x0000000000800092        0x0 /usr/lib/gcc/avr/5.4.0/../../../avr/lib/avr5/libc.a(fputs.o)
 .bss           0x0000000000800092        0x0 /usr/lib/gcc/avr/5.4.0/avr5/libgcc.a(_epilogue.o)
 *(.bss*)
 *(COMMON)
                [!provide]                        PROVIDE (__bss_end, .)
                0x000000000000037e                __data_load_start = LOADADDR (.data)
                0x00000000000003b0                __data_load_end = (__data_load_start + SIZEOF (.data))

.noinit         0x0000000000800092        0x0
                [!provide]                        PROVIDE (__noinit_start, .)
 *(.noinit*)
                [!provide]                        PROVIDE (__noinit_end, .)
                0x0000000000800092                _end = .
                [!provide]                        PROVIDE (__heap_start, .)

.eeprom         0x0000000000810000        0x0
 *(.eeprom*)
                0x0000000000810000                __eeprom_end = .

.fuse
 *(.fuse)
 *(.lfuse)
 *(.hfuse)
 *(.efuse)

.lock
 *(.lock*)

.signature
 *(.signature*)

.user_signatures
 *(.user_signatures*)

.stab
 *(.stab)

.stabstr
 *(.stabstr)

.stab.excl
 *(.stab.excl)

.stab.exclstr
 *(.stab.exclstr)

.stab.index
 *(.stab.index)

.stab.indexstr
 *(.stab.indexstr)

.comment        0x0000000000000000       0x11
 *(.comment)
 .comment       0x0000000000000000       0x11 main.o
                                         0x12 (size before relaxing)
 .comment       0x0000000000000011       0x12 lcd.o
 .comment       0x0000000000000011       0x12 /usr/lib/gcc/avr/5.4.0/../../../avr/lib/avr5/libc.a(fputs.o)

.note.gnu.avr.deviceinfo
                0x0000000000000000       0x3c
 .note.gnu.avr.deviceinfo
                0x0000000000000000       0x3c /usr/lib/gcc/avr/5.4.0/../../../avr/lib/avr5/crtatmega32.o

.note.gnu.build-id
 *(.note.gnu.build-id)

.debug
 *(.debug)

.line
 *(.line)

.debug_srcinfo
 *(.debug_srcinfo)

.debug_sfnames
 *(.debug_sfnames)

.debug_aranges  0x0000000000000000       0x40
 *(.debug_aranges)
 .debug_aranges
                0x0000000000000000       0x20 main.o
 .debug_aranges
                0x0000000000000020       0x20 lcd.o

.debug_pubnames
 *(.debug_pubnames)

.debug_info     0x0000000000000000     0x108b
 *(.debug_info .gnu.linkonce.wi.*)
 .debug_info    0x0000000000000000      0x4e6 /usr/lib/gcc/avr/5.4.0/../../../avr/lib/avr5/crtatmega32.o
 .debug_info    0x00000000000004e6      0x5cc main.o
 .debug_info    0x0000000000000ab2      0x5d9 lcd.o

.debug_abbrev   0x0000000000000000      0x871
 *(.debug_abbrev)
 .debug_abbrev  0x0000000000000000      0x4a3 /usr/lib/gcc/avr/5.4.0/../../../avr/lib/avr5/crtatmega32.o
 .debug_abbrev  0x00000000000004a3      0x1d5 main.o
 .debug_abbrev  0x0000000000000678      0x1f9 lcd.o

.debug_line     0x0000000000000000      0x38d
 *(.debug_line .debug_line.* .debug_line_end)
 .debug_line    0x0000000000000000       0x1a /usr/lib/gcc/avr/5.4.0/../../../avr/lib/avr5/crtatmega32.o
 .debug_line    0x000000000000001a      0x18f main.o
 .debug_line    0x00000000000001a9      0x1e4 lcd.o

.debug_frame    0x0000000000000000       0xd0
 *(.debug_frame)
 .debug_frame   0x0000000000000000       0x24 main.o
 .debug_frame   0x0000000000000024       0xac lcd.o

.debug_str      0x0000000000000000      0x391
 *(.debug_str)
 .debug_str     0x0000000000000000      0x196 /usr/lib/gcc/avr/5.4.0/../../../avr/lib/avr5/crtatmega32.o
 .debug_str     0x0000000000000196      0x1e0 main.o
                                        0x21f (size before relaxing)
 .debug_str     0x0000000000000376       0x1b lcd.o
                                        0x203 (size before relaxing)

.debug_loc      0x0000000000000000      0x513
 *(.debug_loc)
 .debug_loc     0x0000000000000000       0x90 main.o
 .debug_loc     0x0000000000000090      0x483 lcd.o

.debug_macinfo
 *(.debug_macinfo)

.debug_weaknames
 *(.debug_weaknames)

.debug_funcnames
 *(.debug_funcnames)

.debug_typenames
 *(.debug_typenames)

.debug_varnames
 *(.debug_varnames)

.debug_pubtypes
 *(.debug_pubtypes)

.debug_ranges   0x0000000000000000       0x10
 *(.debug_ranges)
 .debug_ranges  0x0000000000000000       0x10 main.o

.debug_macro
 *(.debug_macro)
OUTPUT(main.elf elf32-avr)
LOAD linker stubs

Cross Reference Table

Symbol                                            File
__FUSE_REGION_LENGTH__                            /usr/lib/gcc/avr/5.4.0/../../../avr/lib/avr5/crtatmega32.o
__bad_interrupt                                   /usr/lib/gcc/avr/5.4.0/../../../avr/lib/avr5/crtatmega32.o
__data_end                                        /usr/lib/gcc/avr/5.4.0/avr5/libgcc.a(_copy_data.o)
__data_load_start                                 /usr/lib/gcc/avr/5.4.0/avr5/libgcc.a(_copy_data.o)
__data_start                                      /usr/lib/gcc/avr/5.4.0/avr5/libgcc.a(_copy_data.o)
__do_copy_data                                    /usr/lib/gcc/avr/5.4.0/avr5/libgcc.a(_copy_data.o)
                                                  main.o
__epilogue_restores__                             /usr/lib/gcc/avr/5.4.0/avr5/libgcc.a(_epilogue.o)
                                                  /usr/lib/gcc/avr/5.4.0/../../../avr/lib/avr5/libc.a(fputs.o)
__heap_end                                        /usr/lib/gcc/avr/5.4.0/../../../avr/lib/avr5/crtatmega32.o
__init                                            /usr/lib/gcc/avr/5.4.0/../../../avr/lib/avr5/crtatmega32.o
__stack                                           /usr/lib/gcc/avr/5.4.0/../../../avr/lib/avr5/crtatmega32.o
__vector_1                                        /usr/lib/gcc/avr/5.4.0/../../../avr/lib/avr5/crtatmega32.o
__vector_10                                       /usr/lib/gcc/avr/5.4.0/../../../avr/lib/avr5/crtatmega32.o
__vector_11                                       /usr/lib/gcc/avr/5.4.0/../../../avr/lib/avr5/crtatmega32.o
__vector_12                                       /usr/lib/gcc/avr/5.4.0/../../../avr/lib/avr5/crtatmega32.o
__vector_13                                       /usr/lib/gcc/avr/5.4.0/../../../avr/lib/avr5/crtatmega32.o
__vector_14                                       /usr/lib/gcc/avr/5.4.0/../../../avr/lib/avr5/crtatmega32.o
__vector_15                                       /usr/lib/gcc/avr/5.4.0/../../../avr/lib/avr5/crtatmega32.o
__vector_16                                       /usr/lib/gcc/avr/5.4.0/../../../avr/lib/avr5/crtatmega32.o
__vector_17                                       /usr/lib/gcc/avr/5.4.0/../../../avr/lib/avr5/crtatmega32.o
__vector_18                                       /usr/lib/gcc/avr/5.4.0/../../../avr/lib/avr5/crtatmega32.o
__vector_19                                       /usr/lib/gcc/avr/5.4.0/../../../avr/lib/avr5/crtatmega32.o
__vector_2                                        /usr/lib/gcc/avr/5.4.0/../../../avr/lib/avr5/crtatmega32.o
__vector_20                                       /usr/lib/gcc/avr/5.4.0/../../../avr/lib/avr5/crtatmega32.o
__vector_3                                        /usr/lib/gcc/avr/5.4.0/../../../avr/lib/avr5/crtatmega32.o
__vector_4                                        /usr/lib/gcc/avr/5.4.0/../../../avr/lib/avr5/crtatmega32.o
__vector_5                                        /usr/lib/gcc/avr/5.4.0/../../../avr/lib/avr5/crtatmega32.o
__vector_6                                        /usr/lib/gcc/avr/5.4.0/../../../avr/lib/avr5/crtatmega32.o
__vector_7                                        /usr/lib/gcc/avr/5.4.0/../../../avr/lib/avr5/crtatmega32.o
__vector_8                                        /usr/lib/gcc/avr/5.4.0/../../../avr/lib/avr5/crtatmega32.o
__vector_9                                        /usr/lib/gcc/avr/5.4.0/../../../avr/lib/avr5/crtatmega32.o
__vector_default                                  /usr/lib/gcc/avr/5.4.0/../../../avr/lib/avr5/crtatmega32.o
__vectors                                         /usr/lib/gcc/avr/5.4.0/../../../avr/lib/avr5/crtatmega32.o
_exit                                             /usr/lib/gcc/avr/5.4.0/avr5/libgcc.a(_exit.o)
blinking                                          lcd.o
                                                  main.o
exit                                              /usr/lib/gcc/avr/5.4.0/avr5/libgcc.a(_exit.o)
                                                  /usr/lib/gcc/avr/5.4.0/../../../avr/lib/avr5/crtatmega32.o
fputs                                             /usr/lib/gcc/avr/5.4.0/../../../avr/lib/avr5/libc.a(fputs.o)
                                                  main.o
lcd_clear                                         lcd.o
                                                  main.o
lcd_puts                                          lcd.o
                                                  main.o
lcd_set_xy                                        lcd.o
                                                  main.o
lcd_stream                                        main.o
lcd_write_data                                    lcd.o
                                                  main.o
lcd_write_instr                                   lcd.o
                                                  main.o
lcd_write_text_xy                                 lcd.o
                                                  main.o
lcdinit                                           lcd.o
                                                  main.o
main                                              main.o
                                                  /usr/lib/gcc/avr/5.4.0/../../../avr/lib/avr5/crtatmega32.o
tekst                                             main.o
