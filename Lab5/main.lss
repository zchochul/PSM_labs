
main.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         00000926  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         0000008a  00800060  00000926  000009ba  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .bss          0000000e  008000ea  008000ea  00000a44  2**0
                  ALLOC
  3 .comment      00000011  00000000  00000000  00000a44  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  00000a58  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000048  00000000  00000000  00000a94  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00000931  00000000  00000000  00000adc  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00000751  00000000  00000000  0000140d  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   0000021e  00000000  00000000  00001b5e  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000160  00000000  00000000  00001d7c  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00000326  00000000  00000000  00001edc  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00000374  00000000  00000000  00002202  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000018  00000000  00000000  00002576  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 2a 00 	jmp	0x54	; 0x54 <__ctors_end>
   4:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
   8:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
   c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  10:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  14:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  18:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  1c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  20:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  24:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  28:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  2c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  30:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  34:	0c 94 49 00 	jmp	0x92	; 0x92 <__vector_13>
  38:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  3c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  40:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  44:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  48:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  4c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  50:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>

00000054 <__ctors_end>:
  54:	11 24       	eor	r1, r1
  56:	1f be       	out	0x3f, r1	; 63
  58:	cf e5       	ldi	r28, 0x5F	; 95
  5a:	d8 e0       	ldi	r29, 0x08	; 8
  5c:	de bf       	out	0x3e, r29	; 62
  5e:	cd bf       	out	0x3d, r28	; 61

00000060 <__do_copy_data>:
  60:	10 e0       	ldi	r17, 0x00	; 0
  62:	a0 e6       	ldi	r26, 0x60	; 96
  64:	b0 e0       	ldi	r27, 0x00	; 0
  66:	e6 e2       	ldi	r30, 0x26	; 38
  68:	f9 e0       	ldi	r31, 0x09	; 9
  6a:	02 c0       	rjmp	.+4      	; 0x70 <__do_copy_data+0x10>
  6c:	05 90       	lpm	r0, Z+
  6e:	0d 92       	st	X+, r0
  70:	aa 3e       	cpi	r26, 0xEA	; 234
  72:	b1 07       	cpc	r27, r17
  74:	d9 f7       	brne	.-10     	; 0x6c <__do_copy_data+0xc>

00000076 <__do_clear_bss>:
  76:	20 e0       	ldi	r18, 0x00	; 0
  78:	aa ee       	ldi	r26, 0xEA	; 234
  7a:	b0 e0       	ldi	r27, 0x00	; 0
  7c:	01 c0       	rjmp	.+2      	; 0x80 <.do_clear_bss_start>

0000007e <.do_clear_bss_loop>:
  7e:	1d 92       	st	X+, r1

00000080 <.do_clear_bss_start>:
  80:	a8 3f       	cpi	r26, 0xF8	; 248
  82:	b2 07       	cpc	r27, r18
  84:	e1 f7       	brne	.-8      	; 0x7e <.do_clear_bss_loop>
  86:	0e 94 4c 01 	call	0x298	; 0x298 <main>
  8a:	0c 94 91 04 	jmp	0x922	; 0x922 <_exit>

0000008e <__bad_interrupt>:
  8e:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000092 <__vector_13>:
uint8_t x, y;
uint8_t bufor[10];
uint8_t i;
uint8_t etap;

ISR(USART_RXC_vect){
  92:	1f 92       	push	r1
  94:	0f 92       	push	r0
  96:	0f b6       	in	r0, 0x3f	; 63
  98:	0f 92       	push	r0
  9a:	11 24       	eor	r1, r1
  9c:	2f 93       	push	r18
  9e:	3f 93       	push	r19
  a0:	4f 93       	push	r20
  a2:	5f 93       	push	r21
  a4:	6f 93       	push	r22
  a6:	7f 93       	push	r23
  a8:	8f 93       	push	r24
  aa:	9f 93       	push	r25
  ac:	af 93       	push	r26
  ae:	bf 93       	push	r27
  b0:	ef 93       	push	r30
  b2:	ff 93       	push	r31
	bufor[i]=UDR;
  b4:	80 91 eb 00 	lds	r24, 0x00EB	; 0x8000eb <i>
  b8:	9c b1       	in	r25, 0x0c	; 12
  ba:	e8 2f       	mov	r30, r24
  bc:	f0 e0       	ldi	r31, 0x00	; 0
  be:	e3 51       	subi	r30, 0x13	; 19
  c0:	ff 4f       	sbci	r31, 0xFF	; 255
  c2:	90 83       	st	Z, r25
	if(bufor[i] == '\n' || bufor[i] == '\r'){
  c4:	9a 30       	cpi	r25, 0x0A	; 10
  c6:	19 f0       	breq	.+6      	; 0xce <__vector_13+0x3c>
  c8:	9d 30       	cpi	r25, 0x0D	; 13
  ca:	09 f0       	breq	.+2      	; 0xce <__vector_13+0x3c>
  cc:	bc c0       	rjmp	.+376    	; 0x246 <__vector_13+0x1b4>
		if(!strncmp( (const char *) bufor, "on", 2 ))
			PORTC = 0x00;
		i=0;
	*/
	
	if (etap == 0){
  ce:	80 91 f7 00 	lds	r24, 0x00F7	; 0x8000f7 <etap>
  d2:	81 11       	cpse	r24, r1
  d4:	07 c0       	rjmp	.+14     	; 0xe4 <__vector_13+0x52>
		
		x = atoi( (const char*) bufor);
  d6:	8d ee       	ldi	r24, 0xED	; 237
  d8:	90 e0       	ldi	r25, 0x00	; 0
  da:	0e 94 67 01 	call	0x2ce	; 0x2ce <atoi>
  de:	80 93 ea 00 	sts	0x00EA, r24	; 0x8000ea <__data_end>
  e2:	a4 c0       	rjmp	.+328    	; 0x22c <__vector_13+0x19a>
	}
	if (etap == 1){
  e4:	81 30       	cpi	r24, 0x01	; 1
  e6:	39 f4       	brne	.+14     	; 0xf6 <__vector_13+0x64>
		y = atoi( (const char*) bufor);
  e8:	8d ee       	ldi	r24, 0xED	; 237
  ea:	90 e0       	ldi	r25, 0x00	; 0
  ec:	0e 94 67 01 	call	0x2ce	; 0x2ce <atoi>
  f0:	80 93 ec 00 	sts	0x00EC, r24	; 0x8000ec <y>
  f4:	9b c0       	rjmp	.+310    	; 0x22c <__vector_13+0x19a>
	}
	if (etap == 2){
  f6:	82 30       	cpi	r24, 0x02	; 2
  f8:	09 f0       	breq	.+2      	; 0xfc <__vector_13+0x6a>
  fa:	98 c0       	rjmp	.+304    	; 0x22c <__vector_13+0x19a>
		if (bufor[0] == '+'){
  fc:	80 91 ed 00 	lds	r24, 0x00ED	; 0x8000ed <bufor>
 100:	8b 32       	cpi	r24, 0x2B	; 43
 102:	01 f5       	brne	.+64     	; 0x144 <__vector_13+0xb2>
			fprintf(&u_stream,"%d + %d = %d \n", x, y, x+y);
 104:	20 91 ea 00 	lds	r18, 0x00EA	; 0x8000ea <__data_end>
 108:	30 91 ec 00 	lds	r19, 0x00EC	; 0x8000ec <y>
 10c:	83 2f       	mov	r24, r19
 10e:	90 e0       	ldi	r25, 0x00	; 0
 110:	82 0f       	add	r24, r18
 112:	91 1d       	adc	r25, r1
 114:	9f 93       	push	r25
 116:	8f 93       	push	r24
 118:	1f 92       	push	r1
 11a:	3f 93       	push	r19
 11c:	1f 92       	push	r1
 11e:	2f 93       	push	r18
 120:	8e e6       	ldi	r24, 0x6E	; 110
 122:	90 e0       	ldi	r25, 0x00	; 0
 124:	9f 93       	push	r25
 126:	8f 93       	push	r24
 128:	80 e6       	ldi	r24, 0x60	; 96
 12a:	90 e0       	ldi	r25, 0x00	; 0
 12c:	9f 93       	push	r25
 12e:	8f 93       	push	r24
 130:	0e 94 8d 01 	call	0x31a	; 0x31a <fprintf>
 134:	8d b7       	in	r24, 0x3d	; 61
 136:	9e b7       	in	r25, 0x3e	; 62
 138:	0a 96       	adiw	r24, 0x0a	; 10
 13a:	0f b6       	in	r0, 0x3f	; 63
 13c:	f8 94       	cli
 13e:	9e bf       	out	0x3e, r25	; 62
 140:	0f be       	out	0x3f, r0	; 63
 142:	8d bf       	out	0x3d, r24	; 61
		}
		if (bufor[0] == '-'){
 144:	80 91 ed 00 	lds	r24, 0x00ED	; 0x8000ed <bufor>
 148:	8d 32       	cpi	r24, 0x2D	; 45
 14a:	01 f5       	brne	.+64     	; 0x18c <__vector_13+0xfa>
			fprintf(&u_stream,"%d - %d = %d \n", x, y, x-y);
 14c:	20 91 ea 00 	lds	r18, 0x00EA	; 0x8000ea <__data_end>
 150:	82 2f       	mov	r24, r18
 152:	90 e0       	ldi	r25, 0x00	; 0
 154:	30 91 ec 00 	lds	r19, 0x00EC	; 0x8000ec <y>
 158:	83 1b       	sub	r24, r19
 15a:	91 09       	sbc	r25, r1
 15c:	9f 93       	push	r25
 15e:	8f 93       	push	r24
 160:	1f 92       	push	r1
 162:	3f 93       	push	r19
 164:	1f 92       	push	r1
 166:	2f 93       	push	r18
 168:	8d e7       	ldi	r24, 0x7D	; 125
 16a:	90 e0       	ldi	r25, 0x00	; 0
 16c:	9f 93       	push	r25
 16e:	8f 93       	push	r24
 170:	80 e6       	ldi	r24, 0x60	; 96
 172:	90 e0       	ldi	r25, 0x00	; 0
 174:	9f 93       	push	r25
 176:	8f 93       	push	r24
 178:	0e 94 8d 01 	call	0x31a	; 0x31a <fprintf>
 17c:	8d b7       	in	r24, 0x3d	; 61
 17e:	9e b7       	in	r25, 0x3e	; 62
 180:	0a 96       	adiw	r24, 0x0a	; 10
 182:	0f b6       	in	r0, 0x3f	; 63
 184:	f8 94       	cli
 186:	9e bf       	out	0x3e, r25	; 62
 188:	0f be       	out	0x3f, r0	; 63
 18a:	8d bf       	out	0x3d, r24	; 61
		}
		if (bufor[0] == '*'){
 18c:	80 91 ed 00 	lds	r24, 0x00ED	; 0x8000ed <bufor>
 190:	8a 32       	cpi	r24, 0x2A	; 42
 192:	f9 f4       	brne	.+62     	; 0x1d2 <__vector_13+0x140>
			fprintf(&u_stream,"%d * %d = %d \n", x, y, x*y);
 194:	80 91 ea 00 	lds	r24, 0x00EA	; 0x8000ea <__data_end>
 198:	90 91 ec 00 	lds	r25, 0x00EC	; 0x8000ec <y>
 19c:	89 9f       	mul	r24, r25
 19e:	90 01       	movw	r18, r0
 1a0:	11 24       	eor	r1, r1
 1a2:	3f 93       	push	r19
 1a4:	2f 93       	push	r18
 1a6:	1f 92       	push	r1
 1a8:	9f 93       	push	r25
 1aa:	1f 92       	push	r1
 1ac:	8f 93       	push	r24
 1ae:	8c e8       	ldi	r24, 0x8C	; 140
 1b0:	90 e0       	ldi	r25, 0x00	; 0
 1b2:	9f 93       	push	r25
 1b4:	8f 93       	push	r24
 1b6:	80 e6       	ldi	r24, 0x60	; 96
 1b8:	90 e0       	ldi	r25, 0x00	; 0
 1ba:	9f 93       	push	r25
 1bc:	8f 93       	push	r24
 1be:	0e 94 8d 01 	call	0x31a	; 0x31a <fprintf>
 1c2:	8d b7       	in	r24, 0x3d	; 61
 1c4:	9e b7       	in	r25, 0x3e	; 62
 1c6:	0a 96       	adiw	r24, 0x0a	; 10
 1c8:	0f b6       	in	r0, 0x3f	; 63
 1ca:	f8 94       	cli
 1cc:	9e bf       	out	0x3e, r25	; 62
 1ce:	0f be       	out	0x3f, r0	; 63
 1d0:	8d bf       	out	0x3d, r24	; 61
		}
		if (bufor[0] == '/'){
 1d2:	80 91 ed 00 	lds	r24, 0x00ED	; 0x8000ed <bufor>
 1d6:	8f 32       	cpi	r24, 0x2F	; 47
 1d8:	49 f5       	brne	.+82     	; 0x22c <__vector_13+0x19a>
			if(y == 0)
 1da:	20 91 ec 00 	lds	r18, 0x00EC	; 0x8000ec <y>
 1de:	21 11       	cpse	r18, r1
 1e0:	07 c0       	rjmp	.+14     	; 0x1f0 <__vector_13+0x15e>
				fprintf(&u_stream,"Nie dziel cholero przez zero! \n");
 1e2:	60 e6       	ldi	r22, 0x60	; 96
 1e4:	70 e0       	ldi	r23, 0x00	; 0
 1e6:	8b e9       	ldi	r24, 0x9B	; 155
 1e8:	90 e0       	ldi	r25, 0x00	; 0
 1ea:	0e 94 9f 01 	call	0x33e	; 0x33e <fputs>
 1ee:	1e c0       	rjmp	.+60     	; 0x22c <__vector_13+0x19a>
			else
				fprintf(&u_stream,"%d / %d = %d \n", x, y, x/y);
 1f0:	30 91 ea 00 	lds	r19, 0x00EA	; 0x8000ea <__data_end>
 1f4:	83 2f       	mov	r24, r19
 1f6:	62 2f       	mov	r22, r18
 1f8:	0e 94 5b 01 	call	0x2b6	; 0x2b6 <__udivmodqi4>
 1fc:	1f 92       	push	r1
 1fe:	8f 93       	push	r24
 200:	1f 92       	push	r1
 202:	2f 93       	push	r18
 204:	1f 92       	push	r1
 206:	3f 93       	push	r19
 208:	8b eb       	ldi	r24, 0xBB	; 187
 20a:	90 e0       	ldi	r25, 0x00	; 0
 20c:	9f 93       	push	r25
 20e:	8f 93       	push	r24
 210:	80 e6       	ldi	r24, 0x60	; 96
 212:	90 e0       	ldi	r25, 0x00	; 0
 214:	9f 93       	push	r25
 216:	8f 93       	push	r24
 218:	0e 94 8d 01 	call	0x31a	; 0x31a <fprintf>
 21c:	8d b7       	in	r24, 0x3d	; 61
 21e:	9e b7       	in	r25, 0x3e	; 62
 220:	0a 96       	adiw	r24, 0x0a	; 10
 222:	0f b6       	in	r0, 0x3f	; 63
 224:	f8 94       	cli
 226:	9e bf       	out	0x3e, r25	; 62
 228:	0f be       	out	0x3f, r0	; 63
 22a:	8d bf       	out	0x3d, r24	; 61
		}
	}
		i=0;
 22c:	10 92 eb 00 	sts	0x00EB, r1	; 0x8000eb <i>
		etap++;
 230:	80 91 f7 00 	lds	r24, 0x00F7	; 0x8000f7 <etap>
 234:	8f 5f       	subi	r24, 0xFF	; 255
		if(etap == 3)
 236:	83 30       	cpi	r24, 0x03	; 3
 238:	19 f0       	breq	.+6      	; 0x240 <__vector_13+0x1ae>
			else
				fprintf(&u_stream,"%d / %d = %d \n", x, y, x/y);
		}
	}
		i=0;
		etap++;
 23a:	80 93 f7 00 	sts	0x00F7, r24	; 0x8000f7 <etap>
 23e:	06 c0       	rjmp	.+12     	; 0x24c <__vector_13+0x1ba>
		if(etap == 3)
			etap = 0;
 240:	10 92 f7 00 	sts	0x00F7, r1	; 0x8000f7 <etap>
 244:	03 c0       	rjmp	.+6      	; 0x24c <__vector_13+0x1ba>
	}
	else
		i++;
 246:	8f 5f       	subi	r24, 0xFF	; 255
 248:	80 93 eb 00 	sts	0x00EB, r24	; 0x8000eb <i>
	
}
 24c:	ff 91       	pop	r31
 24e:	ef 91       	pop	r30
 250:	bf 91       	pop	r27
 252:	af 91       	pop	r26
 254:	9f 91       	pop	r25
 256:	8f 91       	pop	r24
 258:	7f 91       	pop	r23
 25a:	6f 91       	pop	r22
 25c:	5f 91       	pop	r21
 25e:	4f 91       	pop	r20
 260:	3f 91       	pop	r19
 262:	2f 91       	pop	r18
 264:	0f 90       	pop	r0
 266:	0f be       	out	0x3f, r0	; 63
 268:	0f 90       	pop	r0
 26a:	1f 90       	pop	r1
 26c:	18 95       	reti

0000026e <USART_Init>:
#include "usart.h"
void USART_Init( unsigned int baud )
{
/* prę dkoś ć transmisji */
UBRRH = (unsigned char)(baud>>8);
 26e:	90 bd       	out	0x20, r25	; 32
UBRRL = (unsigned char)baud;
 270:	89 b9       	out	0x09, r24	; 9
/* Format ramki: słowo=8bitów, 2 bity stopu */
UCSRC = (1<<URSEL)|(1<<USBS)|(3<<UCSZ0);
 272:	8e e8       	ldi	r24, 0x8E	; 142
 274:	80 bd       	out	0x20, r24	; 32
/* Włą czenie odbiornika i nadajnika */
UCSRB = (1<<RXEN)|(1<<TXEN);
 276:	88 e1       	ldi	r24, 0x18	; 24
 278:	8a b9       	out	0x0a, r24	; 10
/* Włą czenie przerwania, gdy przyszła dana */
UCSRB |= (1<<RXCIE);
 27a:	57 9a       	sbi	0x0a, 7	; 10
 27c:	08 95       	ret

0000027e <USART_Transmit>:
}

void USART_Transmit( unsigned char data )
{
/* Czekaj, aż zwolni się bufor nadajnika */
while ( !( UCSRA & (1<<UDRE)) );
 27e:	5d 9b       	sbis	0x0b, 5	; 11
 280:	fe cf       	rjmp	.-4      	; 0x27e <USART_Transmit>
/* Umieś ć daną w buforze i ją wyś lij */
UDR = data;
 282:	8c b9       	out	0x0c, r24	; 12
 284:	08 95       	ret

00000286 <USART_Receive>:

//Wysyłanie i odbiór danej (pooling)
unsigned char USART_Receive( void )
{
/* Czekaj, aż pojawi się dana do odbioru */
while ( !(UCSRA & (1<<RXC)) ) ;
 286:	5f 9b       	sbis	0x0b, 7	; 11
 288:	fe cf       	rjmp	.-4      	; 0x286 <USART_Receive>
/* Odbierz daną */
return UDR;
 28a:	8c b1       	in	r24, 0x0c	; 12

}
 28c:	08 95       	ret

0000028e <u_putc>:

int u_putc(char c, FILE *unused)
{
	USART_Transmit(c);
 28e:	0e 94 3f 01 	call	0x27e	; 0x27e <USART_Transmit>
	return 0;
}
 292:	80 e0       	ldi	r24, 0x00	; 0
 294:	90 e0       	ldi	r25, 0x00	; 0
 296:	08 95       	ret

00000298 <main>:


int main(void){
	USART_Init(1); //500 000 baud
 298:	81 e0       	ldi	r24, 0x01	; 1
 29a:	90 e0       	ldi	r25, 0x00	; 0
 29c:	0e 94 37 01 	call	0x26e	; 0x26e <USART_Init>
	DDRC = 0xff;
 2a0:	8f ef       	ldi	r24, 0xFF	; 255
 2a2:	84 bb       	out	0x14, r24	; 20
	PORTC = 0xff;
 2a4:	85 bb       	out	0x15, r24	; 21
	sei();
 2a6:	78 94       	sei
	fprintf(&u_stream,"Witaj podaj pierwsza liczbe! \n");
 2a8:	60 e6       	ldi	r22, 0x60	; 96
 2aa:	70 e0       	ldi	r23, 0x00	; 0
 2ac:	8a ec       	ldi	r24, 0xCA	; 202
 2ae:	90 e0       	ldi	r25, 0x00	; 0
 2b0:	0e 94 9f 01 	call	0x33e	; 0x33e <fputs>
 2b4:	ff cf       	rjmp	.-2      	; 0x2b4 <main+0x1c>

000002b6 <__udivmodqi4>:
 2b6:	99 1b       	sub	r25, r25
 2b8:	79 e0       	ldi	r23, 0x09	; 9
 2ba:	04 c0       	rjmp	.+8      	; 0x2c4 <__udivmodqi4_ep>

000002bc <__udivmodqi4_loop>:
 2bc:	99 1f       	adc	r25, r25
 2be:	96 17       	cp	r25, r22
 2c0:	08 f0       	brcs	.+2      	; 0x2c4 <__udivmodqi4_ep>
 2c2:	96 1b       	sub	r25, r22

000002c4 <__udivmodqi4_ep>:
 2c4:	88 1f       	adc	r24, r24
 2c6:	7a 95       	dec	r23
 2c8:	c9 f7       	brne	.-14     	; 0x2bc <__udivmodqi4_loop>
 2ca:	80 95       	com	r24
 2cc:	08 95       	ret

000002ce <atoi>:
 2ce:	fc 01       	movw	r30, r24
 2d0:	88 27       	eor	r24, r24
 2d2:	99 27       	eor	r25, r25
 2d4:	e8 94       	clt
 2d6:	21 91       	ld	r18, Z+
 2d8:	20 32       	cpi	r18, 0x20	; 32
 2da:	e9 f3       	breq	.-6      	; 0x2d6 <atoi+0x8>
 2dc:	29 30       	cpi	r18, 0x09	; 9
 2de:	10 f0       	brcs	.+4      	; 0x2e4 <atoi+0x16>
 2e0:	2e 30       	cpi	r18, 0x0E	; 14
 2e2:	c8 f3       	brcs	.-14     	; 0x2d6 <atoi+0x8>
 2e4:	2b 32       	cpi	r18, 0x2B	; 43
 2e6:	41 f0       	breq	.+16     	; 0x2f8 <atoi+0x2a>
 2e8:	2d 32       	cpi	r18, 0x2D	; 45
 2ea:	39 f4       	brne	.+14     	; 0x2fa <atoi+0x2c>
 2ec:	68 94       	set
 2ee:	04 c0       	rjmp	.+8      	; 0x2f8 <atoi+0x2a>
 2f0:	0e 94 85 01 	call	0x30a	; 0x30a <__mulhi_const_10>
 2f4:	82 0f       	add	r24, r18
 2f6:	91 1d       	adc	r25, r1
 2f8:	21 91       	ld	r18, Z+
 2fa:	20 53       	subi	r18, 0x30	; 48
 2fc:	2a 30       	cpi	r18, 0x0A	; 10
 2fe:	c0 f3       	brcs	.-16     	; 0x2f0 <atoi+0x22>
 300:	1e f4       	brtc	.+6      	; 0x308 <atoi+0x3a>
 302:	90 95       	com	r25
 304:	81 95       	neg	r24
 306:	9f 4f       	sbci	r25, 0xFF	; 255
 308:	08 95       	ret

0000030a <__mulhi_const_10>:
 30a:	7a e0       	ldi	r23, 0x0A	; 10
 30c:	97 9f       	mul	r25, r23
 30e:	90 2d       	mov	r25, r0
 310:	87 9f       	mul	r24, r23
 312:	80 2d       	mov	r24, r0
 314:	91 0d       	add	r25, r1
 316:	11 24       	eor	r1, r1
 318:	08 95       	ret

0000031a <fprintf>:
 31a:	a0 e0       	ldi	r26, 0x00	; 0
 31c:	b0 e0       	ldi	r27, 0x00	; 0
 31e:	e3 e9       	ldi	r30, 0x93	; 147
 320:	f1 e0       	ldi	r31, 0x01	; 1
 322:	0c 94 6a 04 	jmp	0x8d4	; 0x8d4 <__prologue_saves__+0x20>
 326:	ae 01       	movw	r20, r28
 328:	47 5f       	subi	r20, 0xF7	; 247
 32a:	5f 4f       	sbci	r21, 0xFF	; 255
 32c:	6f 81       	ldd	r22, Y+7	; 0x07
 32e:	78 85       	ldd	r23, Y+8	; 0x08
 330:	8d 81       	ldd	r24, Y+5	; 0x05
 332:	9e 81       	ldd	r25, Y+6	; 0x06
 334:	0e 94 c9 01 	call	0x392	; 0x392 <vfprintf>
 338:	e2 e0       	ldi	r30, 0x02	; 2
 33a:	0c 94 86 04 	jmp	0x90c	; 0x90c <__epilogue_restores__+0x20>

0000033e <fputs>:
 33e:	ef 92       	push	r14
 340:	ff 92       	push	r15
 342:	0f 93       	push	r16
 344:	1f 93       	push	r17
 346:	cf 93       	push	r28
 348:	df 93       	push	r29
 34a:	db 01       	movw	r26, r22
 34c:	13 96       	adiw	r26, 0x03	; 3
 34e:	2c 91       	ld	r18, X
 350:	21 ff       	sbrs	r18, 1
 352:	18 c0       	rjmp	.+48     	; 0x384 <fputs+0x46>
 354:	8b 01       	movw	r16, r22
 356:	7c 01       	movw	r14, r24
 358:	d0 e0       	ldi	r29, 0x00	; 0
 35a:	c0 e0       	ldi	r28, 0x00	; 0
 35c:	f7 01       	movw	r30, r14
 35e:	81 91       	ld	r24, Z+
 360:	7f 01       	movw	r14, r30
 362:	88 23       	and	r24, r24
 364:	61 f0       	breq	.+24     	; 0x37e <fputs+0x40>
 366:	d8 01       	movw	r26, r16
 368:	18 96       	adiw	r26, 0x08	; 8
 36a:	ed 91       	ld	r30, X+
 36c:	fc 91       	ld	r31, X
 36e:	19 97       	sbiw	r26, 0x09	; 9
 370:	b8 01       	movw	r22, r16
 372:	09 95       	icall
 374:	89 2b       	or	r24, r25
 376:	91 f3       	breq	.-28     	; 0x35c <fputs+0x1e>
 378:	df ef       	ldi	r29, 0xFF	; 255
 37a:	cf ef       	ldi	r28, 0xFF	; 255
 37c:	ef cf       	rjmp	.-34     	; 0x35c <fputs+0x1e>
 37e:	8d 2f       	mov	r24, r29
 380:	9c 2f       	mov	r25, r28
 382:	02 c0       	rjmp	.+4      	; 0x388 <fputs+0x4a>
 384:	8f ef       	ldi	r24, 0xFF	; 255
 386:	9f ef       	ldi	r25, 0xFF	; 255
 388:	cd b7       	in	r28, 0x3d	; 61
 38a:	de b7       	in	r29, 0x3e	; 62
 38c:	e6 e0       	ldi	r30, 0x06	; 6
 38e:	0c 94 82 04 	jmp	0x904	; 0x904 <__epilogue_restores__+0x18>

00000392 <vfprintf>:
 392:	ab e0       	ldi	r26, 0x0B	; 11
 394:	b0 e0       	ldi	r27, 0x00	; 0
 396:	ef ec       	ldi	r30, 0xCF	; 207
 398:	f1 e0       	ldi	r31, 0x01	; 1
 39a:	0c 94 5a 04 	jmp	0x8b4	; 0x8b4 <__prologue_saves__>
 39e:	6c 01       	movw	r12, r24
 3a0:	7b 01       	movw	r14, r22
 3a2:	8a 01       	movw	r16, r20
 3a4:	fc 01       	movw	r30, r24
 3a6:	17 82       	std	Z+7, r1	; 0x07
 3a8:	16 82       	std	Z+6, r1	; 0x06
 3aa:	83 81       	ldd	r24, Z+3	; 0x03
 3ac:	81 ff       	sbrs	r24, 1
 3ae:	cc c1       	rjmp	.+920    	; 0x748 <__LOCK_REGION_LENGTH__+0x348>
 3b0:	ce 01       	movw	r24, r28
 3b2:	01 96       	adiw	r24, 0x01	; 1
 3b4:	3c 01       	movw	r6, r24
 3b6:	f6 01       	movw	r30, r12
 3b8:	93 81       	ldd	r25, Z+3	; 0x03
 3ba:	f7 01       	movw	r30, r14
 3bc:	93 fd       	sbrc	r25, 3
 3be:	85 91       	lpm	r24, Z+
 3c0:	93 ff       	sbrs	r25, 3
 3c2:	81 91       	ld	r24, Z+
 3c4:	7f 01       	movw	r14, r30
 3c6:	88 23       	and	r24, r24
 3c8:	09 f4       	brne	.+2      	; 0x3cc <vfprintf+0x3a>
 3ca:	ba c1       	rjmp	.+884    	; 0x740 <__LOCK_REGION_LENGTH__+0x340>
 3cc:	85 32       	cpi	r24, 0x25	; 37
 3ce:	39 f4       	brne	.+14     	; 0x3de <vfprintf+0x4c>
 3d0:	93 fd       	sbrc	r25, 3
 3d2:	85 91       	lpm	r24, Z+
 3d4:	93 ff       	sbrs	r25, 3
 3d6:	81 91       	ld	r24, Z+
 3d8:	7f 01       	movw	r14, r30
 3da:	85 32       	cpi	r24, 0x25	; 37
 3dc:	29 f4       	brne	.+10     	; 0x3e8 <vfprintf+0x56>
 3de:	b6 01       	movw	r22, r12
 3e0:	90 e0       	ldi	r25, 0x00	; 0
 3e2:	0e 94 c0 03 	call	0x780	; 0x780 <fputc>
 3e6:	e7 cf       	rjmp	.-50     	; 0x3b6 <vfprintf+0x24>
 3e8:	91 2c       	mov	r9, r1
 3ea:	21 2c       	mov	r2, r1
 3ec:	31 2c       	mov	r3, r1
 3ee:	ff e1       	ldi	r31, 0x1F	; 31
 3f0:	f3 15       	cp	r31, r3
 3f2:	d8 f0       	brcs	.+54     	; 0x42a <__LOCK_REGION_LENGTH__+0x2a>
 3f4:	8b 32       	cpi	r24, 0x2B	; 43
 3f6:	79 f0       	breq	.+30     	; 0x416 <__LOCK_REGION_LENGTH__+0x16>
 3f8:	38 f4       	brcc	.+14     	; 0x408 <__LOCK_REGION_LENGTH__+0x8>
 3fa:	80 32       	cpi	r24, 0x20	; 32
 3fc:	79 f0       	breq	.+30     	; 0x41c <__LOCK_REGION_LENGTH__+0x1c>
 3fe:	83 32       	cpi	r24, 0x23	; 35
 400:	a1 f4       	brne	.+40     	; 0x42a <__LOCK_REGION_LENGTH__+0x2a>
 402:	23 2d       	mov	r18, r3
 404:	20 61       	ori	r18, 0x10	; 16
 406:	1d c0       	rjmp	.+58     	; 0x442 <__LOCK_REGION_LENGTH__+0x42>
 408:	8d 32       	cpi	r24, 0x2D	; 45
 40a:	61 f0       	breq	.+24     	; 0x424 <__LOCK_REGION_LENGTH__+0x24>
 40c:	80 33       	cpi	r24, 0x30	; 48
 40e:	69 f4       	brne	.+26     	; 0x42a <__LOCK_REGION_LENGTH__+0x2a>
 410:	23 2d       	mov	r18, r3
 412:	21 60       	ori	r18, 0x01	; 1
 414:	16 c0       	rjmp	.+44     	; 0x442 <__LOCK_REGION_LENGTH__+0x42>
 416:	83 2d       	mov	r24, r3
 418:	82 60       	ori	r24, 0x02	; 2
 41a:	38 2e       	mov	r3, r24
 41c:	e3 2d       	mov	r30, r3
 41e:	e4 60       	ori	r30, 0x04	; 4
 420:	3e 2e       	mov	r3, r30
 422:	2a c0       	rjmp	.+84     	; 0x478 <__LOCK_REGION_LENGTH__+0x78>
 424:	f3 2d       	mov	r31, r3
 426:	f8 60       	ori	r31, 0x08	; 8
 428:	1d c0       	rjmp	.+58     	; 0x464 <__LOCK_REGION_LENGTH__+0x64>
 42a:	37 fc       	sbrc	r3, 7
 42c:	2d c0       	rjmp	.+90     	; 0x488 <__LOCK_REGION_LENGTH__+0x88>
 42e:	20 ed       	ldi	r18, 0xD0	; 208
 430:	28 0f       	add	r18, r24
 432:	2a 30       	cpi	r18, 0x0A	; 10
 434:	40 f0       	brcs	.+16     	; 0x446 <__LOCK_REGION_LENGTH__+0x46>
 436:	8e 32       	cpi	r24, 0x2E	; 46
 438:	b9 f4       	brne	.+46     	; 0x468 <__LOCK_REGION_LENGTH__+0x68>
 43a:	36 fc       	sbrc	r3, 6
 43c:	81 c1       	rjmp	.+770    	; 0x740 <__LOCK_REGION_LENGTH__+0x340>
 43e:	23 2d       	mov	r18, r3
 440:	20 64       	ori	r18, 0x40	; 64
 442:	32 2e       	mov	r3, r18
 444:	19 c0       	rjmp	.+50     	; 0x478 <__LOCK_REGION_LENGTH__+0x78>
 446:	36 fe       	sbrs	r3, 6
 448:	06 c0       	rjmp	.+12     	; 0x456 <__LOCK_REGION_LENGTH__+0x56>
 44a:	8a e0       	ldi	r24, 0x0A	; 10
 44c:	98 9e       	mul	r9, r24
 44e:	20 0d       	add	r18, r0
 450:	11 24       	eor	r1, r1
 452:	92 2e       	mov	r9, r18
 454:	11 c0       	rjmp	.+34     	; 0x478 <__LOCK_REGION_LENGTH__+0x78>
 456:	ea e0       	ldi	r30, 0x0A	; 10
 458:	2e 9e       	mul	r2, r30
 45a:	20 0d       	add	r18, r0
 45c:	11 24       	eor	r1, r1
 45e:	22 2e       	mov	r2, r18
 460:	f3 2d       	mov	r31, r3
 462:	f0 62       	ori	r31, 0x20	; 32
 464:	3f 2e       	mov	r3, r31
 466:	08 c0       	rjmp	.+16     	; 0x478 <__LOCK_REGION_LENGTH__+0x78>
 468:	8c 36       	cpi	r24, 0x6C	; 108
 46a:	21 f4       	brne	.+8      	; 0x474 <__LOCK_REGION_LENGTH__+0x74>
 46c:	83 2d       	mov	r24, r3
 46e:	80 68       	ori	r24, 0x80	; 128
 470:	38 2e       	mov	r3, r24
 472:	02 c0       	rjmp	.+4      	; 0x478 <__LOCK_REGION_LENGTH__+0x78>
 474:	88 36       	cpi	r24, 0x68	; 104
 476:	41 f4       	brne	.+16     	; 0x488 <__LOCK_REGION_LENGTH__+0x88>
 478:	f7 01       	movw	r30, r14
 47a:	93 fd       	sbrc	r25, 3
 47c:	85 91       	lpm	r24, Z+
 47e:	93 ff       	sbrs	r25, 3
 480:	81 91       	ld	r24, Z+
 482:	7f 01       	movw	r14, r30
 484:	81 11       	cpse	r24, r1
 486:	b3 cf       	rjmp	.-154    	; 0x3ee <vfprintf+0x5c>
 488:	98 2f       	mov	r25, r24
 48a:	9f 7d       	andi	r25, 0xDF	; 223
 48c:	95 54       	subi	r25, 0x45	; 69
 48e:	93 30       	cpi	r25, 0x03	; 3
 490:	28 f4       	brcc	.+10     	; 0x49c <__LOCK_REGION_LENGTH__+0x9c>
 492:	0c 5f       	subi	r16, 0xFC	; 252
 494:	1f 4f       	sbci	r17, 0xFF	; 255
 496:	9f e3       	ldi	r25, 0x3F	; 63
 498:	99 83       	std	Y+1, r25	; 0x01
 49a:	0d c0       	rjmp	.+26     	; 0x4b6 <__LOCK_REGION_LENGTH__+0xb6>
 49c:	83 36       	cpi	r24, 0x63	; 99
 49e:	31 f0       	breq	.+12     	; 0x4ac <__LOCK_REGION_LENGTH__+0xac>
 4a0:	83 37       	cpi	r24, 0x73	; 115
 4a2:	71 f0       	breq	.+28     	; 0x4c0 <__LOCK_REGION_LENGTH__+0xc0>
 4a4:	83 35       	cpi	r24, 0x53	; 83
 4a6:	09 f0       	breq	.+2      	; 0x4aa <__LOCK_REGION_LENGTH__+0xaa>
 4a8:	59 c0       	rjmp	.+178    	; 0x55c <__LOCK_REGION_LENGTH__+0x15c>
 4aa:	21 c0       	rjmp	.+66     	; 0x4ee <__LOCK_REGION_LENGTH__+0xee>
 4ac:	f8 01       	movw	r30, r16
 4ae:	80 81       	ld	r24, Z
 4b0:	89 83       	std	Y+1, r24	; 0x01
 4b2:	0e 5f       	subi	r16, 0xFE	; 254
 4b4:	1f 4f       	sbci	r17, 0xFF	; 255
 4b6:	88 24       	eor	r8, r8
 4b8:	83 94       	inc	r8
 4ba:	91 2c       	mov	r9, r1
 4bc:	53 01       	movw	r10, r6
 4be:	13 c0       	rjmp	.+38     	; 0x4e6 <__LOCK_REGION_LENGTH__+0xe6>
 4c0:	28 01       	movw	r4, r16
 4c2:	f2 e0       	ldi	r31, 0x02	; 2
 4c4:	4f 0e       	add	r4, r31
 4c6:	51 1c       	adc	r5, r1
 4c8:	f8 01       	movw	r30, r16
 4ca:	a0 80       	ld	r10, Z
 4cc:	b1 80       	ldd	r11, Z+1	; 0x01
 4ce:	36 fe       	sbrs	r3, 6
 4d0:	03 c0       	rjmp	.+6      	; 0x4d8 <__LOCK_REGION_LENGTH__+0xd8>
 4d2:	69 2d       	mov	r22, r9
 4d4:	70 e0       	ldi	r23, 0x00	; 0
 4d6:	02 c0       	rjmp	.+4      	; 0x4dc <__LOCK_REGION_LENGTH__+0xdc>
 4d8:	6f ef       	ldi	r22, 0xFF	; 255
 4da:	7f ef       	ldi	r23, 0xFF	; 255
 4dc:	c5 01       	movw	r24, r10
 4de:	0e 94 b5 03 	call	0x76a	; 0x76a <strnlen>
 4e2:	4c 01       	movw	r8, r24
 4e4:	82 01       	movw	r16, r4
 4e6:	f3 2d       	mov	r31, r3
 4e8:	ff 77       	andi	r31, 0x7F	; 127
 4ea:	3f 2e       	mov	r3, r31
 4ec:	16 c0       	rjmp	.+44     	; 0x51a <__LOCK_REGION_LENGTH__+0x11a>
 4ee:	28 01       	movw	r4, r16
 4f0:	22 e0       	ldi	r18, 0x02	; 2
 4f2:	42 0e       	add	r4, r18
 4f4:	51 1c       	adc	r5, r1
 4f6:	f8 01       	movw	r30, r16
 4f8:	a0 80       	ld	r10, Z
 4fa:	b1 80       	ldd	r11, Z+1	; 0x01
 4fc:	36 fe       	sbrs	r3, 6
 4fe:	03 c0       	rjmp	.+6      	; 0x506 <__LOCK_REGION_LENGTH__+0x106>
 500:	69 2d       	mov	r22, r9
 502:	70 e0       	ldi	r23, 0x00	; 0
 504:	02 c0       	rjmp	.+4      	; 0x50a <__LOCK_REGION_LENGTH__+0x10a>
 506:	6f ef       	ldi	r22, 0xFF	; 255
 508:	7f ef       	ldi	r23, 0xFF	; 255
 50a:	c5 01       	movw	r24, r10
 50c:	0e 94 aa 03 	call	0x754	; 0x754 <strnlen_P>
 510:	4c 01       	movw	r8, r24
 512:	f3 2d       	mov	r31, r3
 514:	f0 68       	ori	r31, 0x80	; 128
 516:	3f 2e       	mov	r3, r31
 518:	82 01       	movw	r16, r4
 51a:	33 fc       	sbrc	r3, 3
 51c:	1b c0       	rjmp	.+54     	; 0x554 <__LOCK_REGION_LENGTH__+0x154>
 51e:	82 2d       	mov	r24, r2
 520:	90 e0       	ldi	r25, 0x00	; 0
 522:	88 16       	cp	r8, r24
 524:	99 06       	cpc	r9, r25
 526:	b0 f4       	brcc	.+44     	; 0x554 <__LOCK_REGION_LENGTH__+0x154>
 528:	b6 01       	movw	r22, r12
 52a:	80 e2       	ldi	r24, 0x20	; 32
 52c:	90 e0       	ldi	r25, 0x00	; 0
 52e:	0e 94 c0 03 	call	0x780	; 0x780 <fputc>
 532:	2a 94       	dec	r2
 534:	f4 cf       	rjmp	.-24     	; 0x51e <__LOCK_REGION_LENGTH__+0x11e>
 536:	f5 01       	movw	r30, r10
 538:	37 fc       	sbrc	r3, 7
 53a:	85 91       	lpm	r24, Z+
 53c:	37 fe       	sbrs	r3, 7
 53e:	81 91       	ld	r24, Z+
 540:	5f 01       	movw	r10, r30
 542:	b6 01       	movw	r22, r12
 544:	90 e0       	ldi	r25, 0x00	; 0
 546:	0e 94 c0 03 	call	0x780	; 0x780 <fputc>
 54a:	21 10       	cpse	r2, r1
 54c:	2a 94       	dec	r2
 54e:	21 e0       	ldi	r18, 0x01	; 1
 550:	82 1a       	sub	r8, r18
 552:	91 08       	sbc	r9, r1
 554:	81 14       	cp	r8, r1
 556:	91 04       	cpc	r9, r1
 558:	71 f7       	brne	.-36     	; 0x536 <__LOCK_REGION_LENGTH__+0x136>
 55a:	e8 c0       	rjmp	.+464    	; 0x72c <__LOCK_REGION_LENGTH__+0x32c>
 55c:	84 36       	cpi	r24, 0x64	; 100
 55e:	11 f0       	breq	.+4      	; 0x564 <__LOCK_REGION_LENGTH__+0x164>
 560:	89 36       	cpi	r24, 0x69	; 105
 562:	41 f5       	brne	.+80     	; 0x5b4 <__LOCK_REGION_LENGTH__+0x1b4>
 564:	f8 01       	movw	r30, r16
 566:	37 fe       	sbrs	r3, 7
 568:	07 c0       	rjmp	.+14     	; 0x578 <__LOCK_REGION_LENGTH__+0x178>
 56a:	60 81       	ld	r22, Z
 56c:	71 81       	ldd	r23, Z+1	; 0x01
 56e:	82 81       	ldd	r24, Z+2	; 0x02
 570:	93 81       	ldd	r25, Z+3	; 0x03
 572:	0c 5f       	subi	r16, 0xFC	; 252
 574:	1f 4f       	sbci	r17, 0xFF	; 255
 576:	08 c0       	rjmp	.+16     	; 0x588 <__LOCK_REGION_LENGTH__+0x188>
 578:	60 81       	ld	r22, Z
 57a:	71 81       	ldd	r23, Z+1	; 0x01
 57c:	07 2e       	mov	r0, r23
 57e:	00 0c       	add	r0, r0
 580:	88 0b       	sbc	r24, r24
 582:	99 0b       	sbc	r25, r25
 584:	0e 5f       	subi	r16, 0xFE	; 254
 586:	1f 4f       	sbci	r17, 0xFF	; 255
 588:	f3 2d       	mov	r31, r3
 58a:	ff 76       	andi	r31, 0x6F	; 111
 58c:	3f 2e       	mov	r3, r31
 58e:	97 ff       	sbrs	r25, 7
 590:	09 c0       	rjmp	.+18     	; 0x5a4 <__LOCK_REGION_LENGTH__+0x1a4>
 592:	90 95       	com	r25
 594:	80 95       	com	r24
 596:	70 95       	com	r23
 598:	61 95       	neg	r22
 59a:	7f 4f       	sbci	r23, 0xFF	; 255
 59c:	8f 4f       	sbci	r24, 0xFF	; 255
 59e:	9f 4f       	sbci	r25, 0xFF	; 255
 5a0:	f0 68       	ori	r31, 0x80	; 128
 5a2:	3f 2e       	mov	r3, r31
 5a4:	2a e0       	ldi	r18, 0x0A	; 10
 5a6:	30 e0       	ldi	r19, 0x00	; 0
 5a8:	a3 01       	movw	r20, r6
 5aa:	0e 94 fc 03 	call	0x7f8	; 0x7f8 <__ultoa_invert>
 5ae:	88 2e       	mov	r8, r24
 5b0:	86 18       	sub	r8, r6
 5b2:	45 c0       	rjmp	.+138    	; 0x63e <__LOCK_REGION_LENGTH__+0x23e>
 5b4:	85 37       	cpi	r24, 0x75	; 117
 5b6:	31 f4       	brne	.+12     	; 0x5c4 <__LOCK_REGION_LENGTH__+0x1c4>
 5b8:	23 2d       	mov	r18, r3
 5ba:	2f 7e       	andi	r18, 0xEF	; 239
 5bc:	b2 2e       	mov	r11, r18
 5be:	2a e0       	ldi	r18, 0x0A	; 10
 5c0:	30 e0       	ldi	r19, 0x00	; 0
 5c2:	25 c0       	rjmp	.+74     	; 0x60e <__LOCK_REGION_LENGTH__+0x20e>
 5c4:	93 2d       	mov	r25, r3
 5c6:	99 7f       	andi	r25, 0xF9	; 249
 5c8:	b9 2e       	mov	r11, r25
 5ca:	8f 36       	cpi	r24, 0x6F	; 111
 5cc:	c1 f0       	breq	.+48     	; 0x5fe <__LOCK_REGION_LENGTH__+0x1fe>
 5ce:	18 f4       	brcc	.+6      	; 0x5d6 <__LOCK_REGION_LENGTH__+0x1d6>
 5d0:	88 35       	cpi	r24, 0x58	; 88
 5d2:	79 f0       	breq	.+30     	; 0x5f2 <__LOCK_REGION_LENGTH__+0x1f2>
 5d4:	b5 c0       	rjmp	.+362    	; 0x740 <__LOCK_REGION_LENGTH__+0x340>
 5d6:	80 37       	cpi	r24, 0x70	; 112
 5d8:	19 f0       	breq	.+6      	; 0x5e0 <__LOCK_REGION_LENGTH__+0x1e0>
 5da:	88 37       	cpi	r24, 0x78	; 120
 5dc:	21 f0       	breq	.+8      	; 0x5e6 <__LOCK_REGION_LENGTH__+0x1e6>
 5de:	b0 c0       	rjmp	.+352    	; 0x740 <__LOCK_REGION_LENGTH__+0x340>
 5e0:	e9 2f       	mov	r30, r25
 5e2:	e0 61       	ori	r30, 0x10	; 16
 5e4:	be 2e       	mov	r11, r30
 5e6:	b4 fe       	sbrs	r11, 4
 5e8:	0d c0       	rjmp	.+26     	; 0x604 <__LOCK_REGION_LENGTH__+0x204>
 5ea:	fb 2d       	mov	r31, r11
 5ec:	f4 60       	ori	r31, 0x04	; 4
 5ee:	bf 2e       	mov	r11, r31
 5f0:	09 c0       	rjmp	.+18     	; 0x604 <__LOCK_REGION_LENGTH__+0x204>
 5f2:	34 fe       	sbrs	r3, 4
 5f4:	0a c0       	rjmp	.+20     	; 0x60a <__LOCK_REGION_LENGTH__+0x20a>
 5f6:	29 2f       	mov	r18, r25
 5f8:	26 60       	ori	r18, 0x06	; 6
 5fa:	b2 2e       	mov	r11, r18
 5fc:	06 c0       	rjmp	.+12     	; 0x60a <__LOCK_REGION_LENGTH__+0x20a>
 5fe:	28 e0       	ldi	r18, 0x08	; 8
 600:	30 e0       	ldi	r19, 0x00	; 0
 602:	05 c0       	rjmp	.+10     	; 0x60e <__LOCK_REGION_LENGTH__+0x20e>
 604:	20 e1       	ldi	r18, 0x10	; 16
 606:	30 e0       	ldi	r19, 0x00	; 0
 608:	02 c0       	rjmp	.+4      	; 0x60e <__LOCK_REGION_LENGTH__+0x20e>
 60a:	20 e1       	ldi	r18, 0x10	; 16
 60c:	32 e0       	ldi	r19, 0x02	; 2
 60e:	f8 01       	movw	r30, r16
 610:	b7 fe       	sbrs	r11, 7
 612:	07 c0       	rjmp	.+14     	; 0x622 <__LOCK_REGION_LENGTH__+0x222>
 614:	60 81       	ld	r22, Z
 616:	71 81       	ldd	r23, Z+1	; 0x01
 618:	82 81       	ldd	r24, Z+2	; 0x02
 61a:	93 81       	ldd	r25, Z+3	; 0x03
 61c:	0c 5f       	subi	r16, 0xFC	; 252
 61e:	1f 4f       	sbci	r17, 0xFF	; 255
 620:	06 c0       	rjmp	.+12     	; 0x62e <__LOCK_REGION_LENGTH__+0x22e>
 622:	60 81       	ld	r22, Z
 624:	71 81       	ldd	r23, Z+1	; 0x01
 626:	80 e0       	ldi	r24, 0x00	; 0
 628:	90 e0       	ldi	r25, 0x00	; 0
 62a:	0e 5f       	subi	r16, 0xFE	; 254
 62c:	1f 4f       	sbci	r17, 0xFF	; 255
 62e:	a3 01       	movw	r20, r6
 630:	0e 94 fc 03 	call	0x7f8	; 0x7f8 <__ultoa_invert>
 634:	88 2e       	mov	r8, r24
 636:	86 18       	sub	r8, r6
 638:	fb 2d       	mov	r31, r11
 63a:	ff 77       	andi	r31, 0x7F	; 127
 63c:	3f 2e       	mov	r3, r31
 63e:	36 fe       	sbrs	r3, 6
 640:	0d c0       	rjmp	.+26     	; 0x65c <__LOCK_REGION_LENGTH__+0x25c>
 642:	23 2d       	mov	r18, r3
 644:	2e 7f       	andi	r18, 0xFE	; 254
 646:	a2 2e       	mov	r10, r18
 648:	89 14       	cp	r8, r9
 64a:	58 f4       	brcc	.+22     	; 0x662 <__LOCK_REGION_LENGTH__+0x262>
 64c:	34 fe       	sbrs	r3, 4
 64e:	0b c0       	rjmp	.+22     	; 0x666 <__LOCK_REGION_LENGTH__+0x266>
 650:	32 fc       	sbrc	r3, 2
 652:	09 c0       	rjmp	.+18     	; 0x666 <__LOCK_REGION_LENGTH__+0x266>
 654:	83 2d       	mov	r24, r3
 656:	8e 7e       	andi	r24, 0xEE	; 238
 658:	a8 2e       	mov	r10, r24
 65a:	05 c0       	rjmp	.+10     	; 0x666 <__LOCK_REGION_LENGTH__+0x266>
 65c:	b8 2c       	mov	r11, r8
 65e:	a3 2c       	mov	r10, r3
 660:	03 c0       	rjmp	.+6      	; 0x668 <__LOCK_REGION_LENGTH__+0x268>
 662:	b8 2c       	mov	r11, r8
 664:	01 c0       	rjmp	.+2      	; 0x668 <__LOCK_REGION_LENGTH__+0x268>
 666:	b9 2c       	mov	r11, r9
 668:	a4 fe       	sbrs	r10, 4
 66a:	0f c0       	rjmp	.+30     	; 0x68a <__LOCK_REGION_LENGTH__+0x28a>
 66c:	fe 01       	movw	r30, r28
 66e:	e8 0d       	add	r30, r8
 670:	f1 1d       	adc	r31, r1
 672:	80 81       	ld	r24, Z
 674:	80 33       	cpi	r24, 0x30	; 48
 676:	21 f4       	brne	.+8      	; 0x680 <__LOCK_REGION_LENGTH__+0x280>
 678:	9a 2d       	mov	r25, r10
 67a:	99 7e       	andi	r25, 0xE9	; 233
 67c:	a9 2e       	mov	r10, r25
 67e:	09 c0       	rjmp	.+18     	; 0x692 <__LOCK_REGION_LENGTH__+0x292>
 680:	a2 fe       	sbrs	r10, 2
 682:	06 c0       	rjmp	.+12     	; 0x690 <__LOCK_REGION_LENGTH__+0x290>
 684:	b3 94       	inc	r11
 686:	b3 94       	inc	r11
 688:	04 c0       	rjmp	.+8      	; 0x692 <__LOCK_REGION_LENGTH__+0x292>
 68a:	8a 2d       	mov	r24, r10
 68c:	86 78       	andi	r24, 0x86	; 134
 68e:	09 f0       	breq	.+2      	; 0x692 <__LOCK_REGION_LENGTH__+0x292>
 690:	b3 94       	inc	r11
 692:	a3 fc       	sbrc	r10, 3
 694:	11 c0       	rjmp	.+34     	; 0x6b8 <__LOCK_REGION_LENGTH__+0x2b8>
 696:	a0 fe       	sbrs	r10, 0
 698:	06 c0       	rjmp	.+12     	; 0x6a6 <__LOCK_REGION_LENGTH__+0x2a6>
 69a:	b2 14       	cp	r11, r2
 69c:	88 f4       	brcc	.+34     	; 0x6c0 <__LOCK_REGION_LENGTH__+0x2c0>
 69e:	28 0c       	add	r2, r8
 6a0:	92 2c       	mov	r9, r2
 6a2:	9b 18       	sub	r9, r11
 6a4:	0e c0       	rjmp	.+28     	; 0x6c2 <__LOCK_REGION_LENGTH__+0x2c2>
 6a6:	b2 14       	cp	r11, r2
 6a8:	60 f4       	brcc	.+24     	; 0x6c2 <__LOCK_REGION_LENGTH__+0x2c2>
 6aa:	b6 01       	movw	r22, r12
 6ac:	80 e2       	ldi	r24, 0x20	; 32
 6ae:	90 e0       	ldi	r25, 0x00	; 0
 6b0:	0e 94 c0 03 	call	0x780	; 0x780 <fputc>
 6b4:	b3 94       	inc	r11
 6b6:	f7 cf       	rjmp	.-18     	; 0x6a6 <__LOCK_REGION_LENGTH__+0x2a6>
 6b8:	b2 14       	cp	r11, r2
 6ba:	18 f4       	brcc	.+6      	; 0x6c2 <__LOCK_REGION_LENGTH__+0x2c2>
 6bc:	2b 18       	sub	r2, r11
 6be:	02 c0       	rjmp	.+4      	; 0x6c4 <__LOCK_REGION_LENGTH__+0x2c4>
 6c0:	98 2c       	mov	r9, r8
 6c2:	21 2c       	mov	r2, r1
 6c4:	a4 fe       	sbrs	r10, 4
 6c6:	10 c0       	rjmp	.+32     	; 0x6e8 <__LOCK_REGION_LENGTH__+0x2e8>
 6c8:	b6 01       	movw	r22, r12
 6ca:	80 e3       	ldi	r24, 0x30	; 48
 6cc:	90 e0       	ldi	r25, 0x00	; 0
 6ce:	0e 94 c0 03 	call	0x780	; 0x780 <fputc>
 6d2:	a2 fe       	sbrs	r10, 2
 6d4:	17 c0       	rjmp	.+46     	; 0x704 <__LOCK_REGION_LENGTH__+0x304>
 6d6:	a1 fc       	sbrc	r10, 1
 6d8:	03 c0       	rjmp	.+6      	; 0x6e0 <__LOCK_REGION_LENGTH__+0x2e0>
 6da:	88 e7       	ldi	r24, 0x78	; 120
 6dc:	90 e0       	ldi	r25, 0x00	; 0
 6de:	02 c0       	rjmp	.+4      	; 0x6e4 <__LOCK_REGION_LENGTH__+0x2e4>
 6e0:	88 e5       	ldi	r24, 0x58	; 88
 6e2:	90 e0       	ldi	r25, 0x00	; 0
 6e4:	b6 01       	movw	r22, r12
 6e6:	0c c0       	rjmp	.+24     	; 0x700 <__LOCK_REGION_LENGTH__+0x300>
 6e8:	8a 2d       	mov	r24, r10
 6ea:	86 78       	andi	r24, 0x86	; 134
 6ec:	59 f0       	breq	.+22     	; 0x704 <__LOCK_REGION_LENGTH__+0x304>
 6ee:	a1 fe       	sbrs	r10, 1
 6f0:	02 c0       	rjmp	.+4      	; 0x6f6 <__LOCK_REGION_LENGTH__+0x2f6>
 6f2:	8b e2       	ldi	r24, 0x2B	; 43
 6f4:	01 c0       	rjmp	.+2      	; 0x6f8 <__LOCK_REGION_LENGTH__+0x2f8>
 6f6:	80 e2       	ldi	r24, 0x20	; 32
 6f8:	a7 fc       	sbrc	r10, 7
 6fa:	8d e2       	ldi	r24, 0x2D	; 45
 6fc:	b6 01       	movw	r22, r12
 6fe:	90 e0       	ldi	r25, 0x00	; 0
 700:	0e 94 c0 03 	call	0x780	; 0x780 <fputc>
 704:	89 14       	cp	r8, r9
 706:	38 f4       	brcc	.+14     	; 0x716 <__LOCK_REGION_LENGTH__+0x316>
 708:	b6 01       	movw	r22, r12
 70a:	80 e3       	ldi	r24, 0x30	; 48
 70c:	90 e0       	ldi	r25, 0x00	; 0
 70e:	0e 94 c0 03 	call	0x780	; 0x780 <fputc>
 712:	9a 94       	dec	r9
 714:	f7 cf       	rjmp	.-18     	; 0x704 <__LOCK_REGION_LENGTH__+0x304>
 716:	8a 94       	dec	r8
 718:	f3 01       	movw	r30, r6
 71a:	e8 0d       	add	r30, r8
 71c:	f1 1d       	adc	r31, r1
 71e:	80 81       	ld	r24, Z
 720:	b6 01       	movw	r22, r12
 722:	90 e0       	ldi	r25, 0x00	; 0
 724:	0e 94 c0 03 	call	0x780	; 0x780 <fputc>
 728:	81 10       	cpse	r8, r1
 72a:	f5 cf       	rjmp	.-22     	; 0x716 <__LOCK_REGION_LENGTH__+0x316>
 72c:	22 20       	and	r2, r2
 72e:	09 f4       	brne	.+2      	; 0x732 <__LOCK_REGION_LENGTH__+0x332>
 730:	42 ce       	rjmp	.-892    	; 0x3b6 <vfprintf+0x24>
 732:	b6 01       	movw	r22, r12
 734:	80 e2       	ldi	r24, 0x20	; 32
 736:	90 e0       	ldi	r25, 0x00	; 0
 738:	0e 94 c0 03 	call	0x780	; 0x780 <fputc>
 73c:	2a 94       	dec	r2
 73e:	f6 cf       	rjmp	.-20     	; 0x72c <__LOCK_REGION_LENGTH__+0x32c>
 740:	f6 01       	movw	r30, r12
 742:	86 81       	ldd	r24, Z+6	; 0x06
 744:	97 81       	ldd	r25, Z+7	; 0x07
 746:	02 c0       	rjmp	.+4      	; 0x74c <__LOCK_REGION_LENGTH__+0x34c>
 748:	8f ef       	ldi	r24, 0xFF	; 255
 74a:	9f ef       	ldi	r25, 0xFF	; 255
 74c:	2b 96       	adiw	r28, 0x0b	; 11
 74e:	e2 e1       	ldi	r30, 0x12	; 18
 750:	0c 94 76 04 	jmp	0x8ec	; 0x8ec <__epilogue_restores__>

00000754 <strnlen_P>:
 754:	fc 01       	movw	r30, r24
 756:	05 90       	lpm	r0, Z+
 758:	61 50       	subi	r22, 0x01	; 1
 75a:	70 40       	sbci	r23, 0x00	; 0
 75c:	01 10       	cpse	r0, r1
 75e:	d8 f7       	brcc	.-10     	; 0x756 <strnlen_P+0x2>
 760:	80 95       	com	r24
 762:	90 95       	com	r25
 764:	8e 0f       	add	r24, r30
 766:	9f 1f       	adc	r25, r31
 768:	08 95       	ret

0000076a <strnlen>:
 76a:	fc 01       	movw	r30, r24
 76c:	61 50       	subi	r22, 0x01	; 1
 76e:	70 40       	sbci	r23, 0x00	; 0
 770:	01 90       	ld	r0, Z+
 772:	01 10       	cpse	r0, r1
 774:	d8 f7       	brcc	.-10     	; 0x76c <strnlen+0x2>
 776:	80 95       	com	r24
 778:	90 95       	com	r25
 77a:	8e 0f       	add	r24, r30
 77c:	9f 1f       	adc	r25, r31
 77e:	08 95       	ret

00000780 <fputc>:
 780:	0f 93       	push	r16
 782:	1f 93       	push	r17
 784:	cf 93       	push	r28
 786:	df 93       	push	r29
 788:	fb 01       	movw	r30, r22
 78a:	23 81       	ldd	r18, Z+3	; 0x03
 78c:	21 fd       	sbrc	r18, 1
 78e:	03 c0       	rjmp	.+6      	; 0x796 <fputc+0x16>
 790:	8f ef       	ldi	r24, 0xFF	; 255
 792:	9f ef       	ldi	r25, 0xFF	; 255
 794:	2c c0       	rjmp	.+88     	; 0x7ee <fputc+0x6e>
 796:	22 ff       	sbrs	r18, 2
 798:	16 c0       	rjmp	.+44     	; 0x7c6 <fputc+0x46>
 79a:	46 81       	ldd	r20, Z+6	; 0x06
 79c:	57 81       	ldd	r21, Z+7	; 0x07
 79e:	24 81       	ldd	r18, Z+4	; 0x04
 7a0:	35 81       	ldd	r19, Z+5	; 0x05
 7a2:	42 17       	cp	r20, r18
 7a4:	53 07       	cpc	r21, r19
 7a6:	44 f4       	brge	.+16     	; 0x7b8 <fputc+0x38>
 7a8:	a0 81       	ld	r26, Z
 7aa:	b1 81       	ldd	r27, Z+1	; 0x01
 7ac:	9d 01       	movw	r18, r26
 7ae:	2f 5f       	subi	r18, 0xFF	; 255
 7b0:	3f 4f       	sbci	r19, 0xFF	; 255
 7b2:	31 83       	std	Z+1, r19	; 0x01
 7b4:	20 83       	st	Z, r18
 7b6:	8c 93       	st	X, r24
 7b8:	26 81       	ldd	r18, Z+6	; 0x06
 7ba:	37 81       	ldd	r19, Z+7	; 0x07
 7bc:	2f 5f       	subi	r18, 0xFF	; 255
 7be:	3f 4f       	sbci	r19, 0xFF	; 255
 7c0:	37 83       	std	Z+7, r19	; 0x07
 7c2:	26 83       	std	Z+6, r18	; 0x06
 7c4:	14 c0       	rjmp	.+40     	; 0x7ee <fputc+0x6e>
 7c6:	8b 01       	movw	r16, r22
 7c8:	ec 01       	movw	r28, r24
 7ca:	fb 01       	movw	r30, r22
 7cc:	00 84       	ldd	r0, Z+8	; 0x08
 7ce:	f1 85       	ldd	r31, Z+9	; 0x09
 7d0:	e0 2d       	mov	r30, r0
 7d2:	09 95       	icall
 7d4:	89 2b       	or	r24, r25
 7d6:	e1 f6       	brne	.-72     	; 0x790 <fputc+0x10>
 7d8:	d8 01       	movw	r26, r16
 7da:	16 96       	adiw	r26, 0x06	; 6
 7dc:	8d 91       	ld	r24, X+
 7de:	9c 91       	ld	r25, X
 7e0:	17 97       	sbiw	r26, 0x07	; 7
 7e2:	01 96       	adiw	r24, 0x01	; 1
 7e4:	17 96       	adiw	r26, 0x07	; 7
 7e6:	9c 93       	st	X, r25
 7e8:	8e 93       	st	-X, r24
 7ea:	16 97       	sbiw	r26, 0x06	; 6
 7ec:	ce 01       	movw	r24, r28
 7ee:	df 91       	pop	r29
 7f0:	cf 91       	pop	r28
 7f2:	1f 91       	pop	r17
 7f4:	0f 91       	pop	r16
 7f6:	08 95       	ret

000007f8 <__ultoa_invert>:
 7f8:	fa 01       	movw	r30, r20
 7fa:	aa 27       	eor	r26, r26
 7fc:	28 30       	cpi	r18, 0x08	; 8
 7fe:	51 f1       	breq	.+84     	; 0x854 <__ultoa_invert+0x5c>
 800:	20 31       	cpi	r18, 0x10	; 16
 802:	81 f1       	breq	.+96     	; 0x864 <__stack+0x5>
 804:	e8 94       	clt
 806:	6f 93       	push	r22
 808:	6e 7f       	andi	r22, 0xFE	; 254
 80a:	6e 5f       	subi	r22, 0xFE	; 254
 80c:	7f 4f       	sbci	r23, 0xFF	; 255
 80e:	8f 4f       	sbci	r24, 0xFF	; 255
 810:	9f 4f       	sbci	r25, 0xFF	; 255
 812:	af 4f       	sbci	r26, 0xFF	; 255
 814:	b1 e0       	ldi	r27, 0x01	; 1
 816:	3e d0       	rcall	.+124    	; 0x894 <__stack+0x35>
 818:	b4 e0       	ldi	r27, 0x04	; 4
 81a:	3c d0       	rcall	.+120    	; 0x894 <__stack+0x35>
 81c:	67 0f       	add	r22, r23
 81e:	78 1f       	adc	r23, r24
 820:	89 1f       	adc	r24, r25
 822:	9a 1f       	adc	r25, r26
 824:	a1 1d       	adc	r26, r1
 826:	68 0f       	add	r22, r24
 828:	79 1f       	adc	r23, r25
 82a:	8a 1f       	adc	r24, r26
 82c:	91 1d       	adc	r25, r1
 82e:	a1 1d       	adc	r26, r1
 830:	6a 0f       	add	r22, r26
 832:	71 1d       	adc	r23, r1
 834:	81 1d       	adc	r24, r1
 836:	91 1d       	adc	r25, r1
 838:	a1 1d       	adc	r26, r1
 83a:	20 d0       	rcall	.+64     	; 0x87c <__stack+0x1d>
 83c:	09 f4       	brne	.+2      	; 0x840 <__ultoa_invert+0x48>
 83e:	68 94       	set
 840:	3f 91       	pop	r19
 842:	2a e0       	ldi	r18, 0x0A	; 10
 844:	26 9f       	mul	r18, r22
 846:	11 24       	eor	r1, r1
 848:	30 19       	sub	r19, r0
 84a:	30 5d       	subi	r19, 0xD0	; 208
 84c:	31 93       	st	Z+, r19
 84e:	de f6       	brtc	.-74     	; 0x806 <__ultoa_invert+0xe>
 850:	cf 01       	movw	r24, r30
 852:	08 95       	ret
 854:	46 2f       	mov	r20, r22
 856:	47 70       	andi	r20, 0x07	; 7
 858:	40 5d       	subi	r20, 0xD0	; 208
 85a:	41 93       	st	Z+, r20
 85c:	b3 e0       	ldi	r27, 0x03	; 3
 85e:	0f d0       	rcall	.+30     	; 0x87e <__stack+0x1f>
 860:	c9 f7       	brne	.-14     	; 0x854 <__ultoa_invert+0x5c>
 862:	f6 cf       	rjmp	.-20     	; 0x850 <__ultoa_invert+0x58>
 864:	46 2f       	mov	r20, r22
 866:	4f 70       	andi	r20, 0x0F	; 15
 868:	40 5d       	subi	r20, 0xD0	; 208
 86a:	4a 33       	cpi	r20, 0x3A	; 58
 86c:	18 f0       	brcs	.+6      	; 0x874 <__stack+0x15>
 86e:	49 5d       	subi	r20, 0xD9	; 217
 870:	31 fd       	sbrc	r19, 1
 872:	40 52       	subi	r20, 0x20	; 32
 874:	41 93       	st	Z+, r20
 876:	02 d0       	rcall	.+4      	; 0x87c <__stack+0x1d>
 878:	a9 f7       	brne	.-22     	; 0x864 <__stack+0x5>
 87a:	ea cf       	rjmp	.-44     	; 0x850 <__ultoa_invert+0x58>
 87c:	b4 e0       	ldi	r27, 0x04	; 4
 87e:	a6 95       	lsr	r26
 880:	97 95       	ror	r25
 882:	87 95       	ror	r24
 884:	77 95       	ror	r23
 886:	67 95       	ror	r22
 888:	ba 95       	dec	r27
 88a:	c9 f7       	brne	.-14     	; 0x87e <__stack+0x1f>
 88c:	00 97       	sbiw	r24, 0x00	; 0
 88e:	61 05       	cpc	r22, r1
 890:	71 05       	cpc	r23, r1
 892:	08 95       	ret
 894:	9b 01       	movw	r18, r22
 896:	ac 01       	movw	r20, r24
 898:	0a 2e       	mov	r0, r26
 89a:	06 94       	lsr	r0
 89c:	57 95       	ror	r21
 89e:	47 95       	ror	r20
 8a0:	37 95       	ror	r19
 8a2:	27 95       	ror	r18
 8a4:	ba 95       	dec	r27
 8a6:	c9 f7       	brne	.-14     	; 0x89a <__stack+0x3b>
 8a8:	62 0f       	add	r22, r18
 8aa:	73 1f       	adc	r23, r19
 8ac:	84 1f       	adc	r24, r20
 8ae:	95 1f       	adc	r25, r21
 8b0:	a0 1d       	adc	r26, r0
 8b2:	08 95       	ret

000008b4 <__prologue_saves__>:
 8b4:	2f 92       	push	r2
 8b6:	3f 92       	push	r3
 8b8:	4f 92       	push	r4
 8ba:	5f 92       	push	r5
 8bc:	6f 92       	push	r6
 8be:	7f 92       	push	r7
 8c0:	8f 92       	push	r8
 8c2:	9f 92       	push	r9
 8c4:	af 92       	push	r10
 8c6:	bf 92       	push	r11
 8c8:	cf 92       	push	r12
 8ca:	df 92       	push	r13
 8cc:	ef 92       	push	r14
 8ce:	ff 92       	push	r15
 8d0:	0f 93       	push	r16
 8d2:	1f 93       	push	r17
 8d4:	cf 93       	push	r28
 8d6:	df 93       	push	r29
 8d8:	cd b7       	in	r28, 0x3d	; 61
 8da:	de b7       	in	r29, 0x3e	; 62
 8dc:	ca 1b       	sub	r28, r26
 8de:	db 0b       	sbc	r29, r27
 8e0:	0f b6       	in	r0, 0x3f	; 63
 8e2:	f8 94       	cli
 8e4:	de bf       	out	0x3e, r29	; 62
 8e6:	0f be       	out	0x3f, r0	; 63
 8e8:	cd bf       	out	0x3d, r28	; 61
 8ea:	09 94       	ijmp

000008ec <__epilogue_restores__>:
 8ec:	2a 88       	ldd	r2, Y+18	; 0x12
 8ee:	39 88       	ldd	r3, Y+17	; 0x11
 8f0:	48 88       	ldd	r4, Y+16	; 0x10
 8f2:	5f 84       	ldd	r5, Y+15	; 0x0f
 8f4:	6e 84       	ldd	r6, Y+14	; 0x0e
 8f6:	7d 84       	ldd	r7, Y+13	; 0x0d
 8f8:	8c 84       	ldd	r8, Y+12	; 0x0c
 8fa:	9b 84       	ldd	r9, Y+11	; 0x0b
 8fc:	aa 84       	ldd	r10, Y+10	; 0x0a
 8fe:	b9 84       	ldd	r11, Y+9	; 0x09
 900:	c8 84       	ldd	r12, Y+8	; 0x08
 902:	df 80       	ldd	r13, Y+7	; 0x07
 904:	ee 80       	ldd	r14, Y+6	; 0x06
 906:	fd 80       	ldd	r15, Y+5	; 0x05
 908:	0c 81       	ldd	r16, Y+4	; 0x04
 90a:	1b 81       	ldd	r17, Y+3	; 0x03
 90c:	aa 81       	ldd	r26, Y+2	; 0x02
 90e:	b9 81       	ldd	r27, Y+1	; 0x01
 910:	ce 0f       	add	r28, r30
 912:	d1 1d       	adc	r29, r1
 914:	0f b6       	in	r0, 0x3f	; 63
 916:	f8 94       	cli
 918:	de bf       	out	0x3e, r29	; 62
 91a:	0f be       	out	0x3f, r0	; 63
 91c:	cd bf       	out	0x3d, r28	; 61
 91e:	ed 01       	movw	r28, r26
 920:	08 95       	ret

00000922 <_exit>:
 922:	f8 94       	cli

00000924 <__stop_program>:
 924:	ff cf       	rjmp	.-2      	; 0x924 <__stop_program>
